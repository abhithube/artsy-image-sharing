datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["orderByRelation"]
}

model User {
  id            Int         @default(autoincrement()) @id
  username      String      @db.VarChar(255) @unique
  password      String      @db.VarChar(255)
  avatarId      String      @db.VarChar(255) @map("avatar_id")
  confirmed     Boolean     @default(false)
  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime    @updatedAt @map("updated_at")
  avatar        Image       @relation(fields: [avatarId], references: [publicId])
  posts         Post[]
  favorites     Favorite[]
  comments      Comment[]
  @@map("users")
}

model Post {
  id            Int         @default(autoincrement()) @id
  title         String      @db.VarChar(255)
  body          String?
  userId        Int         @map("user_id")
  imageId       String      @db.VarChar(255) @map("image_id")
  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime    @updatedAt @map("updated_at")
  image         Image       @relation(fields: [imageId], references: [publicId])
  user          User        @relation(fields: [userId], references: [id])
  favorites     Favorite[]
  comments      Comment[]
  @@map("posts")
}

model Image {
  publicId  String    @db.VarChar(255) @unique @map("public_id")
  url       String    @db.VarChar
  width     Int
  height    Int
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  post      Post?
  users     User[]
  @@map("images")
}

model Favorite {
  id        Int       @default(autoincrement()) @id
  postId    Int       @map("post_id")
  userId    Int       @map("user_id")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  post      Post      @relation(fields: [postId], references: [id])
  user      User      @relation(fields: [userId], references: [id])
  @@map("favorites")
  @@unique([postId, userId])
}

model Comment {
  id        Int       @default(autoincrement()) @id
  body      String
  postId    Int       @map("post_id")
  userId    Int       @map("user_id")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  post      Post      @relation(fields: [postId], references: [id])
  user      User      @relation(fields: [userId], references: [id])
  @@map("comments")
}